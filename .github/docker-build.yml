## file location and name: # .github/workflows/python-version.yml

##  Named of the workflow.
name: Python version
## Set the trigger policy.
## In this case, the workflow is execute on a `push` event,
## or when a new commit is pushed to the repository
on: [push]
## List the steps to be executed by the workflow
jobs:
  ## Set the name of the job
  check-python-version:
    ## Configure the operating system the workflow should run on.
    ## In this case, the job on Ubuntu
    runs-on: linux/amd64,linux/arm64
    ## Define a sequence of steps to be executed docker 
    steps:
      ## Use the public `checkout` action in version v2  
      ## to checkout the existing code in the repository
      - uses: actions/checkout@v2
      ## Use the public `setup-python` action  in version v2  
      ## to install python on the  Ubuntu based environment 
      - uses: actions/setup-python@v2
      ## Executes the `python --version` command
      - run: python --version
name: Docker Build and Push
# controls the work flow on push or pull 
on: 
  push:
    branches:[ master ]
  pull_request:
    branches: [ master ]  
jobs:
#workflow contains a single job
  build:
    runs-on: ubuntu-latest
    steps:
      -
       name:Checkout
       uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses:docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DukerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_TOKEN}}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file:  ./Dockerfile
          platforms: linux/amd64
          push:true
          tags: mulyowa/python-helloworld:latest

        